@model MeuProjetoWeb.Models.PessoaJurFisViewModel

@{
    ViewBag.Title = "Edit";
}

<br />
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Editar</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
    @Html.HiddenFor(model => model.enderecoId)

    <div class="form-group">
        @Html.LabelFor(model => model.tipoPessoa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.tipoPessoa, new { @class = "form-control", @readonly = "true" })
            @Html.ValidationMessageFor(model => model.tipoPessoa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cpfCnpj, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cpfCnpj, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cpfCnpj, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group razaoSocial hide">
        @Html.LabelFor(model => model.razaoSocial, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.razaoSocial, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.razaoSocial, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group sobreNome hide">
        @Html.LabelFor(model => model.sobreNome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.sobreNome, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.sobreNome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group dataNascimento hide">
        @Html.LabelFor(model => model.dataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.dataNascimento, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.dataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.logradouro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.logradouro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.complemento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.complemento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.complemento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.uf, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.uf, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.uf, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


<script>

    $(document).ready(function () {

        $("#cep").mask('99999-999', { reverse: true });

        if ($('#tipoPessoa').val().toLocaleLowerCase() == 'física') {
            $('.sobreNome').removeClass('hide');
            $('.dataNascimento').removeClass('hide');

            $('.razaoSocial').addClass('hide');           

            $("#cpfCnpj").mask('000.000.000-00', { reverse: true });
            $("#dataNascimento").mask('99/99/9999', { reverse: true });

        } else {
            $('.sobreNome').addClass('hide');
            $('.dataNascimento').addClass('hide');

            $('.razaoSocial').removeClass('hide');

            $("#cpfCnpj").mask("99.999.999/9999-99", { reverse: true });

        };

    });

</script>